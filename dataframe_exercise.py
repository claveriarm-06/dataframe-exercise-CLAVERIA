# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13gM6zw0CooQflb8QG6dVin4allp8j8rA
"""

#Exercise 1: Create the dataframe
data = {
    "OrderID": range(1001, 1021),
    "Product": [
        "Laptop", "Mouse", "Keyboard", "Monitor", "Laptop",
        "Headphones", "Mouse", "Chair", "Desk", "Laptop",
        "Printer", "Keyboard", "Monitor", "Mouse", "Laptop",
        "Headphones", "Desk", "Monitor", "Printer", "Chair"
    ],
    "Category": [
        "Electronics", "Accessories", "Accessories", "Electronics", "Electronics",
        "Accessories", "Accessories", "Furniture", "Furniture", "Electronics",
        "Electronics", "Accessories", "Electronics", "Accessories", "Electronics",
        "Accessories", "Furniture", "Electronics", "Electronics", "Furniture"
    ],
    "Quantity": [2, 5, 3, 4, 1, 6, 10, 2, 1, 3, 2, 4, 2, 7, 5, 3, 2, 4, 1, 6],
    "Price": [800, 20, 50, 200, 850, 40, 25, 150, 300, 900, 120, 55, 250, 20, 750, 35, 280, 220, 110, 180],
    "Customer": [
        "Alice", "Bob", "Charlie", "Diana", "Ethan",
        "Fiona", "George", "Hannah", "Ian", "Jane",
        "Kyle", "Laura", "Mike", "Nina", "Oscar",
        "Paul", "Queen", "Robert", "Sarah", "Tom"
    ],
    "Region": [
        "North", "South", "East", "West", "North",
        "South", "East", "West", "North", "South",
        "East", "West", "North", "South", "East",
        "West", "North", "South", "East", "West"
    ]
}

# Step 1: Create DataFrame
df = pd.DataFrame(data)

# Step 2: Show first 5 rows
print(df.head())

# Step 3: Print DataFrame shape
print("Shape:", df.shape)

# #Exercise 2:
# # Step 4: Show column names
print("Columns:", list(df.columns))

# # Calculate Total column
df["Total"] = df["Quantity"] * df["Price"]

# # Step 1: Add Discount column (10% if Quantity >= 5 else 0)
df["Discount"] = df.apply(lambda row: row["Total"] * 0.10 if row["Quantity"] >= 5 else 0, axis=1)

# #Exercise 3:
# # Step 2: Add FinalTotal column (Total - discount)
df["FinalTotal"] = df["Total"] - df["Discount"]

# # Step 3: Show selected columns
print(df[["OrderID", "Product", "Total", "Discount", "FinalTotal"]].to_string())

# # Step 1: Create new record
new_row = {
    "OrderID": 1021,
    "Product": "Tablet",
    "Category": "Electronics",
    "Quantity": 2,
    "Price": 450,
    "Customer": "Victor",
    "Region": "East"
}

# #Exercise 4:
# # Step 2: Append to DataFrame
new_row_df = pd.DataFrame([new_row])
df = pd.concat([df, new_row_df], ignore_index=True)

# # Step 3: Recalculate Total
df["Total"] = df["Quantity"] * df["Price"]

# # Step 4: Show last 3 rows
print(df.tail(3))

# #Exercise 5:
# # Step 1: Update price of Mouse products
df.loc[df["Product"] == "Mouse", "Price"] = df.loc[df["Product"] == "Mouse", "Price"] + 30

# # Step 2: Recalculate Total for affected rows
df["Total"] = df["Quantity"] * df["Price"]

# # Step 3: Show only Mouse rows
print(df[df["Product"] == "Mouse"])

# #Exercise 6:
# # Step 1: Drop Discount column
df = df.drop(columns=["Discount"])

# # Step 2: Drop FinalTotal column
df = df.drop(columns=["FinalTotal"])

# # Step 3: Show updated DataFrame
print(df.head())

# #Exercise 7:
# # Step 1: Drop row with OrderID = 1010
df = df.drop(df[df["OrderID"] == 1010].index, axis=0)

# # Step 2: Drop the first row by index
df = df.drop(index=0)

# # Step 3: Print new shape
print("New shape:", df.shape)

# #Exerise 8:
# #Step 1: Electronics with Quantity >= 3
# result1 = df[(df["Category"] == "Electronics") & (df["Quantity"] >= 3)]
# print(result1)

# # Step 2: Products with Price > 500
# result2 = df[df["Price"] > 500]
# print(result2)

# # Step 3: Count orders from North region
# count_north = df[df["Region"] == "North"].shape[0]
# print("North orders:", count_north)

# #Exercise 9:
# # Step 1: Sales in West region
# west_sales = df[df["Region"] == "West"]
# print(west_sales)

# # Step 2: Sales by Alice
# alice_sales = df[df["Customer"] == "Alice"]
# print(alice_sales)

# # Step 3: Sales of Laptop or Printer
# subset_sales = df[df["Product"].isin(["Laptop", "Printer"])]
# print(subset_sales)

# #Exercise 10:
# # Step 1: Increase Price of Furniture by 10%
# df.loc[df["Category"] == "Furniture", "Price"] *= 0.10

# # Step 2: Recalculate Total
# df["Total"] = df["Quantity"] * df["Price"]

# # Step 3: Show only Furniture rows
# print(df[df["Category"] == "Furniture"])

# #Exercise 11:
# # Step 1: Sort by Total descending
# sorted_df = df.sort_values(by="Total", ascending=False)
# print(sorted_df.head())

# # Step 2: Show top 5 sales
# print(sorted_df.head(5))

# # Step 3: Multi-level sort (Region then Customer)
# multi_sort = df.sort_values(by=["Region", "Customer"])
# print(multi_sort.head())
